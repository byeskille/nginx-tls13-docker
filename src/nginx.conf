#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    proxy_cache_path  /var/cache/nginx  levels=1:2    keys_zone=STATIC:10m inactive=24h  max_size=512m;
    proxy_cache_key "$scheme$request_method$host$request_uri";

    server {
    listen [::]:4343 ssl;
        server_name tls13.byeskille.no www.tls13.byeskille.no;

        ssl_certificate /etc/nginx/keys/chained.pem;
        ssl_certificate_key /etc/nginx/keys/tls13.byeskille.no-ecdsa384-1.key;

        # generic TLS config following Mozilla modern recommendation
            ssl_session_timeout 1d;
            ssl_session_cache shared:SSL:50m;
            keepalive_timeout 300;
            ssl_session_tickets off;
            http2_idle_timeout 5m;
            http2_max_concurrent_streams 2000;
            http2_max_requests 2000;

            # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
            #ssl_dhparam /etc/nginx/ssl/dhparams.pem;

            # modern configuration. tweak to your needs.
            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
            ssl_prefer_server_ciphers on;

            # OCSP Stapling ---
            # fetch OCSP records from URL in ssl_certificate and cache them
            #ssl_stapling on;
            #ssl_stapling_verify on;

            ## verify chain of trust of OCSP response using Root CA and Intermediate certs
            #ssl_trusted_certificate /home/acme/ca-letsencrypt/trustchain.crt;

            #resolver 8.8.8.8 8.8.4.4;

        location / {
            proxy_pass             https://byeskille.no;
            proxy_set_header       Host $host;
            proxy_cache            STATIC;
            add_header X-Proxy-Cache $upstream_cache_status;
            proxy_cache_valid      200  1d;
            proxy_cache_use_stale  error timeout invalid_header updating http_500 http_502 http_503 http_504;
        }

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }




    }




}
